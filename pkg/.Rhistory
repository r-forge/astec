adm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_m=read.csv(nam,h=F)+0.0
adm[[i]]=as.numeric(animal_density_m[,1])+0.0
}
jmm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_juvenile_mass.csv",sep="")
ju=read.csv(nam,h=F)
jmm[[i]]=ju[,1]+0.0
}
class(jmm[[1]])
cm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_carrion_mass.csv",sep="")
car=read.csv(nam,h=F)
cm[[i]]=car[,1]+0.0
}
class(cm[[1]])
wm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_waste_mass.csv",sep="")
wa=read.csv(nam,h=F)
wm[[i]]=wa[,1]+0.0
}
class(wm[[1]])
detr=read.csv("data/detritus_mass.csv",h=F)
dm=as.vector(detr[,1])+0.0
class(dm)
detr_a=read.csv("data/detritus_amount.csv",h=F)
da=as.vector(detr_a[,1])+0.0
class(da)
pl=read.csv("data/green_biomass_day_no_cut.csv",h=F)
pbs=as.vector(pl[,1])+0.0
class(pbs)
pl_sen=read.csv("data/plant_senescence_parameters.csv",h=F)
psp=as.vector(pl_sen[,1])+0.0
class(psp)
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm,"detritus_amount"=da,"plant_biomass_series"=pbs,"plant_senescence_parameters"=psp)
res=foodweb(foodweb_inputs)
res
5/2500
5/2500*4
library(astec)
glob_parameters=read.csv("data/astec_global_parameters.csv",h=F)
glob_parameters
gp=glob_parameters[,2]+0.0
gp
class(gp)
gp[7]=2
gp
class(gp)
name_trophic_gr=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_gr
ntg=list(as.character(name_trophic_gr[1,2]))
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=as.character(name_trophic_gr[1,(i+1)])
}
}
n=dim(name_trophic_gr)
n
tgp=as.numeric(as.matrix(name_trophic_gr[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
adm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_m=read.csv(nam,h=F)+0.0
adm[[i]]=as.numeric(animal_density_m[,1])+0.0
}
jmm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_juvenile_mass.csv",sep="")
ju=read.csv(nam,h=F)
jmm[[i]]=ju[,1]+0.0
}
class(jmm[[1]])
cm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_carrion_mass.csv",sep="")
car=read.csv(nam,h=F)
cm[[i]]=car[,1]+0.0
}
class(cm[[1]])
wm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_waste_mass.csv",sep="")
wa=read.csv(nam,h=F)
wm[[i]]=wa[,1]+0.0
}
class(wm[[1]])
detr=read.csv("data/detritus_mass.csv",h=F)
dm=as.vector(detr[,1])+0.0
class(dm)
detr_a=read.csv("data/detritus_amount.csv",h=F)
da=as.vector(detr_a[,1])+0.0
class(da)
pl=read.csv("data/green_biomass_day_no_cut.csv",h=F)
pbs=as.vector(pl[,1])+0.0
class(pbs)
pl_sen=read.csv("data/plant_senescence_parameters.csv",h=F)
psp=as.vector(pl_sen[,1])+0.0
class(psp)
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm,"detritus_amount"=da,"plant_biomass_series"=pbs,"plant_senescence_parameters"=psp)
res=foodweb(foodweb_inputs)
res
library(astec)
library(astec)
setwd("C:/Boulot/Projets/astec/stage\ capucine/avril/input\ data")
glob_parameters=read.csv("data/astec_global_parameters.csv",h=F)
glob_parameters
gp=glob_parameters[,2]+0.0
gp
class(gp)
name_trophic_gr=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_gr
ntg=list(as.character(name_trophic_gr[1,2]))
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=as.character(name_trophic_gr[1,(i+1)])
}
}
n=dim(name_trophic_gr)
n
tgp=as.numeric(as.matrix(name_trophic_gr[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
adm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_m=read.csv(nam,h=F)+0.0
adm[[i]]=as.numeric(animal_density_m[,1])+0.0
}
jmm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_juvenile_mass.csv",sep="")
ju=read.csv(nam,h=F)
jmm[[i]]=ju[,1]+0.0
}
class(jmm[[1]])
cm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_carrion_mass.csv",sep="")
car=read.csv(nam,h=F)
cm[[i]]=car[,1]+0.0
}
class(cm[[1]])
wm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_waste_mass.csv",sep="")
wa=read.csv(nam,h=F)
wm[[i]]=wa[,1]+0.0
}
class(wm[[1]])
detr=read.csv("data/detritus_mass.csv",h=F)
dm=as.vector(detr[,1])+0.0
class(dm)
detr_a=read.csv("data/detritus_amount.csv",h=F)
da=as.vector(detr_a[,1])+0.0
class(da)
pl=read.csv("data/green_biomass_day_no_cut.csv",h=F)
pbs=as.vector(pl[,1])+0.0
class(pbs)
pl_sen=read.csv("data/plant_senescence_parameters.csv",h=F)
psp=as.vector(pl_sen[,1])+0.0
class(psp)
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm,"detritus_amount"=da,"plant_biomass_series"=pbs,"plant_senescence_parameters"=psp)
res=foodweb(foodweb_inputs)
res
gp[7]=1
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm,"detritus_amount"=da,"plant_biomass_series"=pbs,"plant_senescence_parameters"=psp)
res=foodweb(foodweb_inputs)
res
res$$animal_density_timeseries
res$animal_density_timeseries
res
dim(res$attack_rate)
res$attack_rate[1,]
res$attack_rate[51,]
name_trophic_gr=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_gr
ntg=list(as.character(name_trophic_gr[1,2]))
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=as.character(name_trophic_gr[1,(i+1)])
}
}
n=dim(name_trophic_gr)
n
tgp=as.numeric(as.matrix(name_trophic_gr[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm,"detritus_amount"=da,"plant_biomass_series"=pbs,"plant_senescence_parameters"=psp)
res=foodweb(foodweb_inputs)
res$animal_density_timeseries
name_trophic_gr=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_gr
ntg=list(as.character(name_trophic_gr[1,2]))
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=as.character(name_trophic_gr[1,(i+1)])
}
}
n=dim(name_trophic_gr)
n
tgp=as.numeric(as.matrix(name_trophic_gr[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm,"detritus_amount"=da,"plant_biomass_series"=pbs,"plant_senescence_parameters"=psp)
res=foodweb(foodweb_inputs)
res$animal_density_timeseries
library(astec)
setwd("C:/Boulot/Projets/astec/stage\ capucine/avril/input\ data")
glob_parameters=read.csv("data/astec_global_parameters.csv",h=F)
glob_parameters
gp=glob_parameters[,2]+0.0
gp
class(gp)
#gp[7]=2
name_trophic_gr=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_gr
ntg=list(as.character(name_trophic_gr[1,2]))
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=as.character(name_trophic_gr[1,(i+1)])
}
}
n=dim(name_trophic_gr)
n
tgp=as.numeric(as.matrix(name_trophic_gr[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
adm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_m=read.csv(nam,h=F)+0.0
adm[[i]]=as.numeric(animal_density_m[,1])+0.0
}
jmm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_juvenile_mass.csv",sep="")
ju=read.csv(nam,h=F)
jmm[[i]]=ju[,1]+0.0
}
class(jmm[[1]])
cm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_carrion_mass.csv",sep="")
car=read.csv(nam,h=F)
cm[[i]]=car[,1]+0.0
}
class(cm[[1]])
wm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_waste_mass.csv",sep="")
wa=read.csv(nam,h=F)
wm[[i]]=wa[,1]+0.0
}
class(wm[[1]])
detr=read.csv("data/detritus_mass.csv",h=F)
dm=as.vector(detr[,1])+0.0
class(dm)
detr_a=read.csv("data/detritus_amount.csv",h=F)
da=as.vector(detr_a[,1])+0.0
class(da)
pl=read.csv("data/green_biomass_day_no_cut.csv",h=F)
pbs=as.vector(pl[,1])+0.0
class(pbs)
pl_sen=read.csv("data/plant_senescence_parameters.csv",h=F)
psp=as.vector(pl_sen[,1])+0.0
class(psp)
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm,"detritus_amount"=da,"plant_biomass_series"=pbs,"plant_senescence_parameters"=psp)
res=foodweb(foodweb_inputs)
res$animal_density_timeseries
gp
gp[7]=1
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm,"detritus_amount"=da,"plant_biomass_series"=pbs,"plant_senescence_parameters"=psp)
res=foodweb(foodweb_inputs)
res$animal_density_timeseries
name_trophic_gr=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_gr
ntg=list(as.character(name_trophic_gr[1,2]))
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=as.character(name_trophic_gr[1,(i+1)])
}
}
n=dim(name_trophic_gr)
n
tgp=as.numeric(as.matrix(name_trophic_gr[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
name_trophic_gr=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_gr
ntg=list(as.character(name_trophic_gr[1,2]))
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=as.character(name_trophic_gr[1,(i+1)])
}
}
n=dim(name_trophic_gr)
n
tgp=as.numeric(as.matrix(name_trophic_gr[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm,"detritus_amount"=da,"plant_biomass_series"=pbs,"plant_senescence_parameters"=psp)
res=foodweb(foodweb_inputs)
res$animal_density_timeseries
library(astec)
setwd("C:/Boulot/Projets/astec/stage\ capucine/avril/input\ data")
glob_parameters=read.csv("data/astec_global_parameters.csv",h=F)
glob_parameters
gp=glob_parameters[,2]+0.0
gp
class(gp)
#gp[7]=2
name_trophic_gr=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_gr
ntg=list(as.character(name_trophic_gr[1,2]))
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=as.character(name_trophic_gr[1,(i+1)])
}
}
n=dim(name_trophic_gr)
n
tgp=as.numeric(as.matrix(name_trophic_gr[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
adm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_m=read.csv(nam,h=F)+0.0
adm[[i]]=as.numeric(animal_density_m[,1])+0.0
}
jmm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_juvenile_mass.csv",sep="")
ju=read.csv(nam,h=F)
jmm[[i]]=ju[,1]+0.0
}
class(jmm[[1]])
cm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_carrion_mass.csv",sep="")
car=read.csv(nam,h=F)
cm[[i]]=car[,1]+0.0
}
class(cm[[1]])
wm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_waste_mass.csv",sep="")
wa=read.csv(nam,h=F)
wm[[i]]=wa[,1]+0.0
}
class(wm[[1]])
detr=read.csv("data/detritus_mass.csv",h=F)
dm=as.vector(detr[,1])+0.0
class(dm)
detr_a=read.csv("data/detritus_amount.csv",h=F)
da=as.vector(detr_a[,1])+0.0
class(da)
pl=read.csv("data/green_biomass_day_no_cut.csv",h=F)
pbs=as.vector(pl[,1])+0.0
class(pbs)
pl_sen=read.csv("data/plant_senescence_parameters.csv",h=F)
psp=as.vector(pl_sen[,1])+0.0
class(psp)
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm,"detritus_amount"=da,"plant_biomass_series"=pbs,"plant_senescence_parameters"=psp)
res=foodweb(foodweb_inputs)
res$animal_density_timeseries
res$animal_density_timeseries[1,]
res$animal_density_timeseries[[1]][1,]
res$animal_density_timeseries[[1]][10,]
res$animal_density_timeseries[[1]]
res$animal_density_timeseries[[40]]
res$animal_density_timeseries[[1]][40,]
library(astec)
library(astec)
library(astec)
setwd("C:/Boulot/Projets/astec/stage\ capucine/avril/input\ data")
glob_parameters=read.csv("data/astec_global_parameters.csv",h=F)
glob_parameters
gp=glob_parameters[,2]+0.0
gp
class(gp)
#gp[7]=1
name_trophic_gr=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_gr
ntg=list(as.character(name_trophic_gr[1,2]))
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=as.character(name_trophic_gr[1,(i+1)])
}
}
n=dim(name_trophic_gr)
n
tgp=as.numeric(as.matrix(name_trophic_gr[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
adm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_m=read.csv(nam,h=F)+0.0
adm[[i]]=as.numeric(animal_density_m[,1])+0.0
}
jmm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_juvenile_mass.csv",sep="")
ju=read.csv(nam,h=F)
jmm[[i]]=ju[,1]+0.0
}
class(jmm[[1]])
cm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_carrion_mass.csv",sep="")
car=read.csv(nam,h=F)
cm[[i]]=car[,1]+0.0
}
class(cm[[1]])
wm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_waste_mass.csv",sep="")
wa=read.csv(nam,h=F)
wm[[i]]=wa[,1]+0.0
}
class(wm[[1]])
detr=read.csv("data/detritus_mass.csv",h=F)
dm=as.vector(detr[,1])+0.0
class(dm)
detr_a=read.csv("data/detritus_amount.csv",h=F)
da=as.vector(detr_a[,1])+0.0
class(da)
pl=read.csv("data/green_biomass_day_no_cut.csv",h=F)
pbs=as.vector(pl[,1])+0.0
class(pbs)
pl_sen=read.csv("data/plant_senescence_parameters.csv",h=F)
psp=as.vector(pl_sen[,1])+0.0
class(psp)
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm,"detritus_amount"=da,"plant_biomass_series"=pbs,"plant_senescence_parameters"=psp)
res=foodweb(foodweb_inputs)
#res$animal_density_timeseries
test=Rfoodweb(foodweb_inputs)
#test
sum(res$handling_time==test$handling_time_matrix)
dim(res$handling_time)[1]*dim(res$handling_time)[2]
sum(res$attack_rate==test$attack_rate_matrix)
dim(res$attack_rate)[1]*dim(res$attack_rate)[2]
sum(res$herbivory_rate[1,]==test$herbivory_rate_list[[1]])
dim(res$herbivory_rate)
sum(res$herbivory_K[1,]==test$herbivory_K_list[[1]])
dim(res$herbivory_K)
sum(res$detritivory_rate[1,]==test$detritivory_attack_rate[[1]])
dim(res$detritivory_rate)
sum(res$detritivory_handling[1,]==test$detritivory_handling_time[[1]])
dim(res$detritivory_handling)
length(res$output)
dim(res$output[[1]])
length(test$output)
length(test$output[[1]])
length(test$output[[1]][[1]])
for (i in 1:3){
print(sum(res$output[[i]][,1]==test$output[[1]][[i]]))
}
for (i in 1:3){
print(sum(res$output[[i]][,2]==test$output[[2]][[i]]))
}
for (i in 1:3){
print(sum(res$output[[i]][,3]==test$output[[4]][[i]]))
}
for (i in 1:3){
print(sum(res$output[[i]][,4]==test$output[[5]][[i]]))
}
for (i in 1:3){
print(sum(res$output[[i]][,5]==test$output[[9]][[i]]))
}
for (i in 1:3){
print(sum(res$output[[i]][,6]==test$output[[10]][[i]]))
}
for (i in 1:3){
print(sum(res$output[[i]][,7]==test$output[[11]][[i]]))
}
for (i in 1:3){
print(sum(res$output[[i]][,8]==test$output[[12]][[i]]))
}
for (i in 1:3){
print(sum(res$output[[i]][,9]==test$output[[13]][[i]]))
}
for (i in 1:3){
print(sum(res$output[[i]][,10]==test$output[[14]][[i]]))
}
for (i in 1:3){
print(sum(res$output[[i]][,11]==test$output[[15]][[i]]))
}
max(abs(res$output[[i]][,11]-test$output[[15]]))
res$output[[i]][,11]
max(abs(res$output[[i]][,11]-test$output[[15]][[i]]))
max(abs(res$output[[2]][,11]-test$output[[15]][[2]]))
length(res$animal_density_timeseries)
length(res$animal_density_timeseries[[1]])
res$animal_density_timeseries[[1]][15:20,10]
dim(test$animal_density_timeseries[[1]])
length(test$animal_density_timeseries[[1]])
length(test$animal_density_timeseries[[10]])
length(test$animal_density_timeseries[[10]][[1]])
test$animal_density_timeseries[[10]][[1]][15:20]
test$animal_density_timeseries[[10]][[2]][15:20]
res$animal_density_timeseries[[2]][15:20,10]
res$animal_density_timeseries[[3]][15:20,10]
test$animal_density_timeseries[[10]][[3]][15:20]
