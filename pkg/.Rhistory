mat=mat+0.1
mat
multiply_void(mat,2.0)
mat
mat=cbind(w,w)
multiply_void(mat,2.0)
mat
multiply_void(as.numeric(mat),2.0)
type(ma)
type(mat)
class(mat)
multiply_void(mat,2.0)
mat
multiply_void(mat+0.0,2.0)
mat
matb=mat+0.0
matb
multiply_void(matb,2.0)
matb
multiply_void(matb,2.0)
matb
w=1:5
mat=cbind(w,w)
matb=mat+0.0
multiply_void(mat,2)
multiply_void(matb,2)
mat
matb
multiply_void(mat,2.0)
mat
library(astec)
global_parameters=read.csv("data/astec_global_parameters.csv")
global_parameters
global_parameters=read.csv("data/astec_global_parameters.csv",h=F)
global_parameters
global_parameters=read.csv("data/astec_global_parameters.csv",h=F,row.names=T)
global_parameters=read.csv("data/astec_global_parameters.csv",h=F,names=T)
global_parameters=read.csv("data/astec_global_parameters.csv",h=F,rownames=T)
?read.csv
?read.csv
global_parameters=read.csv2("data/astec_global_parameters.csv",h=F,row.names=T)
global_parameters=read.csv2("data/astec_global_parameters.csv",h=F,names=T)
global_parameters=read.csv("data/astec_global_parameters.csv",h=T)
global_parameters
global_parameters=read.csv("data/astec_global_parameters.csv",h=F)
global_parameters
gp=global_parameters[,2]
gp
gp=global_parameters[,2]+0.0
gp
gp
class(gp)
gp=global_parameters[,2]
gp
class(gp)
gp=global_parameters[,2]+0.0
gp
class(gp)
name_trophic_groups=read.csv("data/name_trophic_groups.csv",h=F)
name_trophic_groups
name_trophic_groups=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_groups
gp
ntg=List(name_trophic_groups[1,2])
ntg
ntg=List::create(name_trophic_groups[1,2])
ntg
ntg=list(name_trophic_groups[1,2])
ntg
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=name_trophic_groups[1,(i+1)]
}
}
ntg
name_trophic_groups
n=dim(name_trophic_groups)
n
trophic_group_parameters =as.matrix(name_trophic_groups[2:n[1],2:n[2]])
trophic_group_parameters
trophic_group_parameters =as.matrix(as.numeric(name_trophic_groups[2:n[1],2:n[2]]))
as.numeric("-0.7")
trophic_group_parameters =as.matrix(name_trophic_groups[2:n[1],2:n[2]])
trophic_group_parameters
as.numeric(trophic_group_parameters)
trophic_group_parameters =as.numeric(name_trophic_groups[2:n[1],2:n[2]])
trophic_group_parameters =as.numeric(as.matrix(name_trophic_groups[2:n[1],2:n[2]]))
trophic_group_parameters
tgp=as.numeric(as.matrix(name_trophic_groups[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
gp
i=1
nam=paste("data/",ntg[[i]],".csv",sep="")
nam
animal_density_matrix=read.csv(nam,h=F)
animal_density_matrix
animal_density_matrix=read.csv(nam,h=F)+0.0
adm=NULL
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_matrix=read.csv(nam,h=F)+0.0
adm=cbind(adm,animal_density_matrix)
}
library(astec)
global_parameters=read.csv("data/astec_global_parameters.csv",h=F)
global_parameters
gp=global_parameters[,2]+0.0
gp
class(gp)
name_trophic_groups=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_groups
ntg=list(name_trophic_groups[1,2])
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=name_trophic_groups[1,(i+1)]
}
}
n=dim(name_trophic_groups)
n
tgp=as.numeric(as.matrix(name_trophic_groups[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
i=1
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_matrix=read.csv(nam,h=F)+0.0
animal_density_matrix
animal_density_matrix[,1]
adm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_matrix=read.csv(nam,h=F)+0.0
adm[[i]]=as.numeric(animal_density_matrix[,1])
}
adm
class(adm[[1]])
jmm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_juvenile_mass.csv",sep="")
juvenile=read.csv(nam,h=F)
jmm[[i]]=juvenile[,1]
}
class(jmm[[1]])
jmm
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass_matrix" = jmm)
library(astec)
global_parameters=read.csv("data/astec_global_parameters.csv",h=F)
global_parameters
gp=global_parameters[,2]+0.0
gp
class(gp)
name_trophic_groups=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_groups
ntg=list(name_trophic_groups[1,2])
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=name_trophic_groups[1,(i+1)]
}
}
n=dim(name_trophic_groups)
n
tgp=as.numeric(as.matrix(name_trophic_groups[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
adm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_matrix=read.csv(nam,h=F)+0.0
adm[[i]]=as.numeric(animal_density_matrix[,1])
}
jmm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_juvenile_mass.csv",sep="")
juvenile=read.csv(nam,h=F)
jmm[[i]]=juvenile[,1]
}
class(jmm[[1]])
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass_matrix" = jmm)
res=foodweb(foodweb_inputs)
res
global_parameters=read.csv("data/astec_global_parameters.csv",h=F)
global_parameters
gp=global_parameters[,2]+0.0
gp
class(gp)
name_trophic_groups=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_groups
ntg=list(name_trophic_groups[1,2])
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=name_trophic_groups[1,(i+1)]
}
}
n=dim(name_trophic_groups)
n
tgp=as.numeric(as.matrix(name_trophic_groups[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
adm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_matrix=read.csv(nam,h=F)+0.0
adm[[i]]=as.numeric(animal_density_matrix[,1])
}
jmm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_juvenile_mass.csv",sep="")
juvenile=read.csv(nam,h=F)
jmm[[i]]=juvenile[,1]
}
class(jmm[[1]])
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass_matrix" = jmm)
res=foodweb(foodweb_inputs)
library(astec)
global_parameters=read.csv("data/astec_global_parameters.csv",h=F)
global_parameters
gp=global_parameters[,2]+0.0
gp
class(gp)
name_trophic_groups=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_groups
ntg=list(name_trophic_groups[1,2])
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=name_trophic_groups[1,(i+1)]
}
}
n=dim(name_trophic_groups)
n
tgp=as.numeric(as.matrix(name_trophic_groups[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
adm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_matrix=read.csv(nam,h=F)+0.0
adm[[i]]=as.numeric(animal_density_matrix[,1])
}
jmm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_juvenile_mass.csv",sep="")
juvenile=read.csv(nam,h=F)
jmm[[i]]=juvenile[,1]
}
class(jmm[[1]])
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass_matrix" = jmm)
res=foodweb(foodweb_inputs)
res
for (i in 1:10){res=foodweb(foodweb_inputs)}
a=Sys.time()
for (i in 1:10){res=foodweb(foodweb_inputs)}
b=Sys.time()
b-a
a=Sys.time()
a=Sys.time()
for (i in 1:10){res=foodweb(foodweb_inputs)}
b=Sys.time()
b-a
a=Sys.time()
for (i in 1:1500){res=foodweb(foodweb_inputs)}
b=Sys.time()
b-a
library(astec)
global_parameters=read.csv("data/astec_global_parameters.csv",h=F)
global_parameters
gp=global_parameters[,2]+0.0
gp
class(gp)
name_trophic_groups=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_groups
ntg=list(name_trophic_groups[1,2])
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=name_trophic_groups[1,(i+1)]
}
}
n=dim(name_trophic_groups)
n
tgp=as.numeric(as.matrix(name_trophic_groups[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
adm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_matrix=read.csv(nam,h=F)+0.0
adm[[i]]=as.numeric(animal_density_matrix[,1])
}
jmm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_juvenile_mass.csv",sep="")
juvenile=read.csv(nam,h=F)
jmm[[i]]=juvenile[,1]
}
class(jmm[[1]])
cm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_carrion_mass.csv",sep="")
carrion=read.csv(nam,h=F)
cm[[i]]=carrion[,1]
}
class(cm[[1]])
wm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_waste_mass.csv",sep="")
waste=read.csv(nam,h=F)
wm[[i]]=waste[,1]
}
class(wm[[1]])
dm=list()
detritus=read.csv("data/detritus_mass.csv",h=F)
dm=as.vector(detritus[,1])
class(dm)
jmm
wm
cm
dm
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm)
res=foodweb(foodweb_inputs)
res
library(astec)
library(astec)
library(astec)
setwd("C:/Boulot/Projets/astec/code/rstudio/astec")
global_parameters=read.csv("data/astec_global_parameters.csv",h=F)
global_parameters
gp=global_parameters[,2]+0.0
gp
class(gp)
name_trophic_groups=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_groups
ntg=list(name_trophic_groups[1,2])
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=name_trophic_groups[1,(i+1)]
}
}
n=dim(name_trophic_groups)
n
tgp=as.numeric(as.matrix(name_trophic_groups[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
adm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_matrix=read.csv(nam,h=F)+0.0
adm[[i]]=as.numeric(animal_density_matrix[,1])+0.0
}
jmm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_juvenile_mass.csv",sep="")
juvenile=read.csv(nam,h=F)
jmm[[i]]=juvenile[,1]+0.0
}
class(jmm[[1]])
cm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_carrion_mass.csv",sep="")
carrion=read.csv(nam,h=F)
cm[[i]]=carrion[,1]+0.0
}
class(cm[[1]])
wm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_waste_mass.csv",sep="")
waste=read.csv(nam,h=F)
wm[[i]]=waste[,1]+0.0
}
class(wm[[1]])
detritus=read.csv("data/detritus_mass.csv",h=F)
dm=as.vector(detritus[,1])+0.0
class(dm)
detritus_amount=read.csv("data/detritus_amount.csv",h=F)
da=as.vector(detritus_amount[,1])+0.0
class(da)
plant=read.csv("data/green_biomass_day_no_cut.csv",h=F)
pbs=as.vector(plant[,1])+0.0
class(pbs)
plant_senescence=read.csv("data/plant_senescence_parameters.csv",h=F)
psp=as.vector(plant_senescence[,1])+0.0
class(psp)
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm,"detritus_amount"=da,"plant_biomass_series"=pbs,"plant_senescence_parameters"=psp)
foodweb_inputs$trophic_group_parameters
library(astec)
library(astec)
library(astec)
setwd("C:/Boulot/Projets/astec/code/rstudio/astec")
glob_parameters=read.csv("data/astec_global_parameters.csv",h=F)
glob_parameters
gp=glob_parameters[,2]+0.0
gp
class(gp)
name_trophic_gr=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_gr
ntg=list(as.character(name_trophic_gr[1,2]))
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=as.character(name_trophic_gr[1,(i+1)])
}
}
n=dim(name_trophic_gr)
n
tgp=as.numeric(as.matrix(name_trophic_gr[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
adm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_m=read.csv(nam,h=F)+0.0
adm[[i]]=as.numeric(animal_density_m[,1])+0.0
}
jmm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_juvenile_mass.csv",sep="")
ju=read.csv(nam,h=F)
jmm[[i]]=ju[,1]+0.0
}
class(jmm[[1]])
cm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_carrion_mass.csv",sep="")
car=read.csv(nam,h=F)
cm[[i]]=car[,1]+0.0
}
class(cm[[1]])
wm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_waste_mass.csv",sep="")
wa=read.csv(nam,h=F)
wm[[i]]=wa[,1]+0.0
}
class(wm[[1]])
detr=read.csv("data/detritus_mass.csv",h=F)
dm=as.vector(detr[,1])+0.0
class(dm)
detr_a=read.csv("data/detritus_amount.csv",h=F)
da=as.vector(detr_a[,1])+0.0
class(da)
pl=read.csv("data/green_biomass_day_no_cut.csv",h=F)
pbs=as.vector(pl[,1])+0.0
class(pbs)
pl_sen=read.csv("data/plant_senescence_parameters.csv",h=F)
psp=as.vector(pl_sen[,1])+0.0
class(psp)
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm,"detritus_amount"=da,"plant_biomass_series"=pbs,"plant_senescence_parameters"=psp)
res=foodweb(foodweb_inputs)
res
5/2500
5/2500*4
library(astec)
glob_parameters=read.csv("data/astec_global_parameters.csv",h=F)
glob_parameters
gp=glob_parameters[,2]+0.0
gp
class(gp)
gp[7]=2
gp
class(gp)
name_trophic_gr=read.csv("data/astec_trophic_group_parameters.csv",h=F)
name_trophic_gr
ntg=list(as.character(name_trophic_gr[1,2]))
if (gp[1]>1){
for (i in 2:gp[1]){
ntg[[i]]=as.character(name_trophic_gr[1,(i+1)])
}
}
n=dim(name_trophic_gr)
n
tgp=as.numeric(as.matrix(name_trophic_gr[2:n[1],2:n[2]]))
dim(tgp)=c(n[1]-1,n[2]-1)
tgp
adm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],".csv",sep="")
animal_density_m=read.csv(nam,h=F)+0.0
adm[[i]]=as.numeric(animal_density_m[,1])+0.0
}
jmm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_juvenile_mass.csv",sep="")
ju=read.csv(nam,h=F)
jmm[[i]]=ju[,1]+0.0
}
class(jmm[[1]])
cm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_carrion_mass.csv",sep="")
car=read.csv(nam,h=F)
cm[[i]]=car[,1]+0.0
}
class(cm[[1]])
wm=list()
for (i in 1:gp[1]){
nam=paste("data/",ntg[[i]],"_waste_mass.csv",sep="")
wa=read.csv(nam,h=F)
wm[[i]]=wa[,1]+0.0
}
class(wm[[1]])
detr=read.csv("data/detritus_mass.csv",h=F)
dm=as.vector(detr[,1])+0.0
class(dm)
detr_a=read.csv("data/detritus_amount.csv",h=F)
da=as.vector(detr_a[,1])+0.0
class(da)
pl=read.csv("data/green_biomass_day_no_cut.csv",h=F)
pbs=as.vector(pl[,1])+0.0
class(pbs)
pl_sen=read.csv("data/plant_senescence_parameters.csv",h=F)
psp=as.vector(pl_sen[,1])+0.0
class(psp)
foodweb_inputs = list("global_parameters" = gp , "name_trophic_groups" = ntg, "trophic_group_parameters" = tgp, "animal_density_matrix" = adm, "juvenile_mass" = jmm, "waste_mass"=wm, "carrion_mass"=cm, "detritus_mass"=dm,"detritus_amount"=da,"plant_biomass_series"=pbs,"plant_senescence_parameters"=psp)
res=foodweb(foodweb_inputs)
res
